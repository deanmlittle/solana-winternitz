use crate::{
    address::WinternitzAddress, hash::{WinternitzKeccak, WinternitzHash}, privkey::WinternitzPrivkey,
    pubkey::WinternitzPubkey,
};

pub const PRIVKEY: WinternitzPrivkey = WinternitzPrivkey([
    [
        0x04, 0x3a, 0x2d, 0x46, 0x24, 0x77, 0x4c, 0x8c, 0x90, 0x40, 0x49, 0x02, 0x7b, 0x3b, 0xea,
        0xa8, 0xf0, 0x8d, 0xae, 0x09, 0xa7, 0x78, 0x6a, 0xc1, 0x7e, 0xb4, 0x56, 0x12, 0x8c, 0xd9,
        0x10, 0xfe,
    ],
    [
        0xeb, 0x7d, 0x73, 0x27, 0xe9, 0xc0, 0x30, 0x0c, 0x45, 0x4b, 0x51, 0x04, 0x9f, 0x59, 0x3e,
        0x0b, 0x01, 0xf8, 0x68, 0xd9, 0x74, 0x19, 0x42, 0xb7, 0xbf, 0x85, 0x8f, 0x0d, 0xde, 0x24,
        0x17, 0xf6,
    ],
    [
        0xa1, 0xf7, 0x3d, 0x6f, 0x8d, 0x68, 0x36, 0xfa, 0x45, 0xbd, 0x00, 0xfd, 0xcf, 0xc4, 0xfc,
        0xd2, 0xc7, 0x5c, 0x4a, 0xea, 0xb4, 0xaf, 0x94, 0xed, 0x1d, 0x4a, 0x6c, 0x8c, 0xcf, 0xca,
        0x95, 0x5e,
    ],
    [
        0x19, 0xe7, 0x6e, 0x6e, 0x55, 0xf5, 0xed, 0x32, 0x0f, 0xe9, 0x38, 0xbc, 0xf8, 0xbe, 0xcc,
        0xe5, 0xc8, 0x39, 0xe7, 0xc6, 0x69, 0x23, 0x79, 0x3d, 0x68, 0x6e, 0x87, 0x35, 0x9c, 0x2b,
        0x6d, 0x68,
    ],
    [
        0xac, 0x84, 0xdf, 0x7c, 0x83, 0x65, 0x9d, 0xa2, 0x24, 0x57, 0xc1, 0x31, 0x01, 0xc0, 0x8b,
        0xb8, 0xe4, 0xf9, 0x25, 0x33, 0xa7, 0xbf, 0x13, 0x8c, 0x70, 0x7f, 0x1b, 0xa3, 0x8f, 0x59,
        0x62, 0x47,
    ],
    [
        0x23, 0xa4, 0x84, 0x96, 0x35, 0xfe, 0x2c, 0x62, 0x4e, 0xea, 0xff, 0x74, 0xfa, 0x3a, 0xcc,
        0x31, 0x3c, 0xf4, 0xac, 0x3c, 0x53, 0x31, 0x7a, 0xf9, 0x42, 0x14, 0xb7, 0x87, 0xe4, 0x9d,
        0x83, 0xbf,
    ],
    [
        0xb2, 0xff, 0xa6, 0x5e, 0xfe, 0xf6, 0x89, 0x8f, 0xda, 0x57, 0x05, 0xcb, 0xd2, 0x73, 0xe9,
        0x2e, 0x6c, 0xc0, 0xec, 0x41, 0x5e, 0xfd, 0x2a, 0x5a, 0x4c, 0x4d, 0x85, 0xa7, 0x71, 0x57,
        0xbf, 0x14,
    ],
    [
        0xf7, 0x25, 0x86, 0x40, 0x8e, 0x9f, 0x49, 0xea, 0xc2, 0xbf, 0x8d, 0x06, 0x5f, 0xd5, 0x76,
        0x24, 0x0e, 0x29, 0x8c, 0xc6, 0x65, 0xf6, 0x06, 0x22, 0xc3, 0x67, 0x05, 0x7f, 0x92, 0x29,
        0x57, 0x19,
    ],
    [
        0x32, 0x60, 0x92, 0xa3, 0x77, 0x1a, 0xbc, 0x79, 0xbf, 0xbd, 0xc9, 0x3c, 0x58, 0x0f, 0x3b,
        0x69, 0x68, 0xb1, 0xe9, 0xaf, 0x31, 0x8b, 0x45, 0x38, 0xca, 0x13, 0xdb, 0x5d, 0x3a, 0x36,
        0x58, 0xa3,
    ],
    [
        0x84, 0x2f, 0xf4, 0x73, 0xae, 0xf4, 0x84, 0x3c, 0xd0, 0x57, 0xc4, 0x77, 0x34, 0xd5, 0x3a,
        0x07, 0x6c, 0xc9, 0x53, 0x88, 0xa0, 0x71, 0xba, 0x6f, 0x2c, 0x73, 0x81, 0x4a, 0x4c, 0x71,
        0xe6, 0xe8,
    ],
    [
        0xbf, 0x9e, 0x70, 0xd6, 0xc2, 0x35, 0x78, 0x12, 0xee, 0xd3, 0x60, 0x2c, 0x3e, 0x79, 0x6e,
        0x67, 0xd3, 0x46, 0x1a, 0x63, 0x59, 0xbd, 0x84, 0x97, 0xc6, 0x36, 0xf1, 0x28, 0xbd, 0x4b,
        0xe0, 0x31,
    ],
    [
        0xff, 0xed, 0xc2, 0xf3, 0xd3, 0x8e, 0x21, 0xcd, 0xf9, 0x93, 0x09, 0xbd, 0x77, 0x3a, 0x28,
        0x02, 0x72, 0x41, 0x90, 0xb4, 0xae, 0xa2, 0x60, 0xeb, 0x23, 0x3e, 0x26, 0xa0, 0xb5, 0xc3,
        0x48, 0xc7,
    ],
    [
        0x15, 0x76, 0x60, 0x56, 0xde, 0xfd, 0x46, 0xfc, 0x6d, 0x32, 0xb0, 0x1f, 0xcb, 0x29, 0x85,
        0x09, 0x10, 0x55, 0x93, 0xb9, 0x6a, 0x20, 0x50, 0x46, 0x0c, 0xfb, 0x1d, 0x3f, 0xa0, 0xa0,
        0x36, 0x66,
    ],
    [
        0x49, 0xc6, 0x0b, 0xb4, 0x6e, 0x14, 0x67, 0x3f, 0x86, 0x15, 0x47, 0x1f, 0x53, 0xed, 0xc1,
        0x6a, 0xf5, 0xd8, 0xe3, 0xcc, 0xb6, 0x26, 0x0a, 0x6e, 0x7e, 0xad, 0x62, 0xba, 0x2d, 0xf6,
        0xa2, 0xcb,
    ],
    [
        0x93, 0xc9, 0x39, 0x41, 0x54, 0xd3, 0xe0, 0x75, 0x6a, 0x50, 0x78, 0xf6, 0x1f, 0x4f, 0x54,
        0xd3, 0xb5, 0x05, 0x7f, 0x75, 0x9e, 0x44, 0x49, 0xbd, 0xb0, 0x91, 0xc2, 0x16, 0xb2, 0xab,
        0x01, 0x5f,
    ],
    [
        0xbf, 0x18, 0x0b, 0x81, 0x8c, 0xaf, 0xe7, 0x2f, 0x64, 0xa9, 0xe7, 0xca, 0x04, 0xd0, 0x1e,
        0xcf, 0x07, 0xcc, 0xea, 0x4a, 0xc4, 0x8f, 0x82, 0xcb, 0x4b, 0xef, 0xa7, 0xdb, 0x41, 0xfa,
        0x20, 0x0f,
    ],
    [
        0x4a, 0xb1, 0x04, 0x4b, 0x5c, 0x5f, 0xba, 0xdc, 0x5c, 0xd8, 0x50, 0x31, 0x65, 0xdc, 0x6c,
        0x06, 0xf6, 0x9b, 0x48, 0x1b, 0x34, 0x43, 0x6f, 0xb0, 0xb2, 0x03, 0xae, 0x6b, 0x32, 0xbc,
        0x0a, 0xe4,
    ],
    [
        0xd1, 0x1f, 0x41, 0xa3, 0x00, 0xb6, 0x8e, 0x04, 0x24, 0xd2, 0xa1, 0x60, 0x90, 0x92, 0x4a,
        0x26, 0x7e, 0x6c, 0x4b, 0x87, 0xf8, 0x6d, 0xdb, 0x2d, 0xf0, 0x4c, 0xb3, 0xad, 0x88, 0x6f,
        0x52, 0x3a,
    ],
    [
        0x54, 0x8d, 0x80, 0x3e, 0xe5, 0xf6, 0x0b, 0x93, 0xb5, 0x7c, 0xe0, 0x2e, 0x1a, 0x77, 0x25,
        0xcf, 0x05, 0x95, 0xd9, 0x43, 0x97, 0x48, 0x1a, 0xbe, 0x78, 0x52, 0xc9, 0x5a, 0x62, 0x2c,
        0x43, 0xed,
    ],
    [
        0xc1, 0x91, 0x77, 0xdc, 0x55, 0x12, 0x7b, 0xe5, 0x58, 0x83, 0x27, 0x95, 0xc9, 0xe5, 0x8a,
        0x63, 0x6c, 0xfc, 0x45, 0xad, 0x84, 0x14, 0x9f, 0x55, 0x20, 0xd0, 0x52, 0xe3, 0x4c, 0x4e,
        0xfc, 0x65,
    ],
    [
        0x9c, 0xf7, 0x62, 0x72, 0xd2, 0xd6, 0x18, 0x4b, 0xb3, 0x7b, 0xe8, 0x39, 0xb7, 0x7f, 0xe5,
        0xb6, 0xd1, 0x21, 0xf7, 0x49, 0x41, 0x5b, 0x43, 0x89, 0x1a, 0xba, 0x84, 0x77, 0xf6, 0xe4,
        0xda, 0x6a,
    ],
    [
        0x6a, 0x7c, 0xb5, 0xe7, 0x44, 0x3c, 0xd3, 0x14, 0x45, 0x80, 0x55, 0x75, 0xba, 0x8e, 0x53,
        0x3c, 0x2e, 0x85, 0x42, 0xdf, 0x67, 0xa5, 0x02, 0x20, 0xdf, 0x8f, 0x62, 0xac, 0xf4, 0x5c,
        0xe0, 0x60,
    ],
    [
        0xa0, 0x4f, 0x3a, 0x04, 0x93, 0x25, 0x81, 0x78, 0xa5, 0xea, 0x4b, 0xf5, 0xd2, 0xc4, 0x32,
        0xe7, 0x99, 0x5a, 0x88, 0x13, 0xf7, 0xa3, 0x4c, 0x01, 0x78, 0x17, 0x42, 0x35, 0x0d, 0x72,
        0xe0, 0x88,
    ],
    [
        0xe6, 0xe0, 0x5c, 0x2b, 0x89, 0x07, 0x99, 0x2e, 0x31, 0x22, 0xb0, 0x6f, 0x6f, 0x10, 0x30,
        0xf8, 0xa8, 0xf8, 0xb7, 0x8e, 0x68, 0x95, 0xa5, 0x92, 0xd7, 0x7e, 0x5e, 0x48, 0x8d, 0x28,
        0x39, 0x3f,
    ],
    [
        0x7a, 0xc7, 0xf2, 0x5c, 0xff, 0xe5, 0x0b, 0x5b, 0x5b, 0x16, 0xcd, 0x47, 0x10, 0x5a, 0x5b,
        0xdd, 0x51, 0xc0, 0x4b, 0x30, 0x6e, 0xf0, 0xed, 0x60, 0x51, 0x0a, 0x77, 0xc5, 0xee, 0x09,
        0x25, 0x09,
    ],
    [
        0x52, 0x54, 0x9c, 0xe4, 0x50, 0xb0, 0x21, 0xd1, 0x2e, 0x57, 0x17, 0x44, 0xb5, 0x62, 0x5e,
        0x49, 0x73, 0xe7, 0x66, 0xf6, 0xa7, 0xc7, 0x07, 0x64, 0xf6, 0xc9, 0x14, 0x88, 0xcc, 0xb6,
        0xa3, 0xb1,
    ],
    [
        0x40, 0xcc, 0xa7, 0x80, 0xfb, 0x11, 0xbb, 0x31, 0x55, 0xdf, 0xa3, 0x87, 0xcf, 0x03, 0x84,
        0xa5, 0x9b, 0x5b, 0xe8, 0x2a, 0x82, 0xe2, 0xb1, 0x92, 0xd1, 0x1d, 0xbb, 0x83, 0x1e, 0xd0,
        0x83, 0xb3,
    ],
    [
        0x70, 0x4b, 0x87, 0xc9, 0x5b, 0x54, 0xaa, 0xfb, 0x57, 0xcc, 0x67, 0xce, 0x4b, 0xcb, 0xc4,
        0x00, 0xb7, 0xc3, 0x7f, 0x3f, 0x8d, 0x9f, 0x83, 0x99, 0x49, 0x41, 0x7c, 0xc0, 0x1f, 0xdd,
        0xb7, 0x4c,
    ],
    [
        0xa8, 0x6f, 0xe3, 0x9b, 0xd2, 0xfb, 0x89, 0x3b, 0x84, 0xe1, 0xe2, 0xb5, 0x9a, 0x97, 0x95,
        0xab, 0xf3, 0xa7, 0x44, 0x96, 0xf5, 0xc5, 0x43, 0x62, 0x00, 0x3a, 0xf9, 0x1b, 0xd5, 0xf8,
        0xe8, 0xa8,
    ],
    [
        0x09, 0x1e, 0x72, 0xff, 0xf0, 0xc9, 0xc6, 0x90, 0x7e, 0x8d, 0x51, 0x9d, 0x7b, 0xa0, 0x0e,
        0x9a, 0xa3, 0x19, 0x51, 0x23, 0xbd, 0x46, 0x10, 0xbb, 0x72, 0x75, 0x71, 0xbf, 0xc1, 0xa0,
        0x28, 0x49,
    ],
    [
        0x8b, 0xec, 0x12, 0xdf, 0xc1, 0x70, 0x33, 0x7f, 0x09, 0x9f, 0xb4, 0x03, 0x1b, 0x5e, 0x8f,
        0x76, 0xfd, 0xc7, 0x2c, 0x3c, 0x65, 0x39, 0x9d, 0x04, 0x87, 0xa0, 0x87, 0x9c, 0x03, 0xe7,
        0x14, 0x2e,
    ],
    [
        0x4d, 0x00, 0x41, 0xff, 0xbe, 0xdf, 0x7b, 0x1b, 0x2a, 0x83, 0x04, 0x4f, 0x7c, 0x5b, 0x15,
        0xb4, 0xe0, 0x9f, 0x29, 0xd0, 0xb3, 0xdb, 0xe8, 0x35, 0xac, 0x1b, 0x8e, 0x99, 0x06, 0x1a,
        0xdf, 0x9a,
    ],
]);

pub const PUBKEY: WinternitzPubkey = WinternitzPubkey([
    [
        0x2e, 0x84, 0x08, 0xdd, 0x99, 0x46, 0xab, 0x72, 0x51, 0x33, 0x88, 0x51, 0xdb, 0x40, 0x61,
        0x20, 0x3f, 0x01, 0x97, 0x6e, 0xe7, 0x50, 0xcc, 0x43, 0x1e, 0xb7, 0x2a, 0xe5, 0x52, 0x74,
        0x4e, 0x32,
    ],
    [
        0x05, 0x8c, 0x71, 0xb4, 0xca, 0x9d, 0xcf, 0xd4, 0x9e, 0x1c, 0xa4, 0xaa, 0x19, 0xbc, 0xdf,
        0x05, 0x1d, 0xe4, 0x14, 0x18, 0x70, 0xa6, 0x58, 0x2c, 0xc2, 0x22, 0x97, 0x4b, 0x7f, 0x32,
        0xf8, 0xd0,
    ],
    [
        0x32, 0xba, 0x88, 0xaa, 0xf0, 0x9e, 0x42, 0x68, 0x2c, 0x11, 0xf4, 0x38, 0x1e, 0xe2, 0xc4,
        0x1a, 0x08, 0x7f, 0x46, 0xdd, 0x54, 0xdc, 0x9e, 0xbb, 0xdc, 0x42, 0x08, 0x56, 0x99, 0x66,
        0xe4, 0x70,
    ],
    [
        0xca, 0xc0, 0x61, 0xd9, 0x8d, 0xcd, 0x9d, 0xb3, 0x57, 0xc9, 0x2b, 0xe9, 0xd2, 0x94, 0x2a,
        0xb8, 0x7f, 0x75, 0xbd, 0xb5, 0xd2, 0x01, 0xcf, 0x96, 0xf8, 0x97, 0x64, 0xae, 0x89, 0x0d,
        0xf9, 0x76,
    ],
    [
        0x3e, 0x0e, 0x67, 0xa4, 0x03, 0xdf, 0x8a, 0x81, 0xa9, 0xe4, 0x48, 0x9c, 0x97, 0x11, 0x0a,
        0x1a, 0x6d, 0x8d, 0xfc, 0x49, 0x77, 0x8a, 0x46, 0x2a, 0xfb, 0xf7, 0xc6, 0x0e, 0x66, 0x15,
        0x7d, 0x0a,
    ],
    [
        0x4e, 0x5b, 0x8b, 0xc9, 0xf8, 0xd7, 0x82, 0x9b, 0x7a, 0x2f, 0x9f, 0x46, 0xb9, 0xcb, 0xaa,
        0x57, 0x1b, 0x97, 0x61, 0x52, 0x06, 0x62, 0x81, 0x68, 0xe6, 0x4f, 0xe8, 0x4c, 0xf4, 0x1d,
        0x74, 0x07,
    ],
    [
        0x12, 0xde, 0xd2, 0xf2, 0x02, 0x0a, 0x38, 0xbb, 0x49, 0xa5, 0x43, 0x5f, 0x21, 0x6f, 0x05,
        0x2c, 0x76, 0x8f, 0x3e, 0xa0, 0x4d, 0xca, 0x5f, 0x36, 0xce, 0xa0, 0x6e, 0x10, 0xd4, 0x30,
        0xaa, 0x67,
    ],
    [
        0xa8, 0xfc, 0x44, 0x24, 0x89, 0x53, 0x25, 0xca, 0x34, 0x4f, 0xcf, 0xcd, 0x87, 0x17, 0x71,
        0x6d, 0xa5, 0x0d, 0x32, 0xb9, 0xf6, 0x80, 0x66, 0x78, 0x33, 0x19, 0xde, 0x7b, 0x82, 0xb4,
        0xf2, 0xd3,
    ],
    [
        0xfa, 0x39, 0x92, 0x72, 0x5c, 0xe7, 0x19, 0x41, 0x0a, 0x61, 0x86, 0xbf, 0x41, 0xff, 0xc5,
        0x8a, 0xee, 0x53, 0xd2, 0xfb, 0x43, 0xd6, 0xd8, 0x88, 0xee, 0x1b, 0x66, 0x8b, 0xeb, 0x57,
        0xe5, 0xaf,
    ],
    [
        0x9d, 0x0a, 0x14, 0xbe, 0x4e, 0xc2, 0xa4, 0x96, 0xbc, 0x31, 0xbb, 0x78, 0x1b, 0xc1, 0xcf,
        0xa5, 0x39, 0x20, 0xb5, 0x0f, 0xb8, 0xc8, 0xff, 0x66, 0x59, 0xf4, 0x15, 0x69, 0x42, 0xd1,
        0x29, 0xe4,
    ],
    [
        0x48, 0x52, 0x41, 0x33, 0x95, 0x1c, 0x7c, 0x5e, 0x33, 0xf3, 0x89, 0x52, 0x25, 0x0e, 0xf9,
        0xd8, 0x54, 0xab, 0x8a, 0x35, 0xa9, 0x24, 0x76, 0x8a, 0x42, 0xe3, 0x49, 0x92, 0x83, 0x9e,
        0x20, 0x2d,
    ],
    [
        0x3e, 0x5e, 0x57, 0x38, 0x78, 0xa6, 0xbd, 0xe3, 0x8e, 0xc2, 0x69, 0x1b, 0x69, 0x25, 0x2e,
        0x8b, 0xa6, 0x5f, 0x29, 0x7e, 0x3e, 0xe4, 0x2b, 0x1f, 0x4c, 0x96, 0x0a, 0x54, 0xdc, 0x3d,
        0x1c, 0xa8,
    ],
    [
        0xde, 0x9d, 0x69, 0xba, 0xa8, 0x07, 0x16, 0x8d, 0x35, 0xd1, 0x39, 0xf4, 0x97, 0xc4, 0x51,
        0x7d, 0x7a, 0xb4, 0x07, 0x6c, 0xe8, 0x5a, 0x0e, 0x02, 0xea, 0xac, 0xff, 0xb7, 0x04, 0xc8,
        0x87, 0xf5,
    ],
    [
        0xa5, 0xc7, 0x21, 0x6a, 0x1b, 0x53, 0x01, 0xe9, 0xe1, 0xe3, 0xe2, 0x88, 0x71, 0xd0, 0xdd,
        0x92, 0x15, 0x8a, 0x01, 0x65, 0x95, 0xd6, 0xef, 0x65, 0xe3, 0x3d, 0xfd, 0x9b, 0x07, 0x3e,
        0x93, 0x17,
    ],
    [
        0x92, 0x2d, 0x16, 0x1c, 0x28, 0xe7, 0x0e, 0xb5, 0xb2, 0x17, 0x74, 0xe9, 0x17, 0x73, 0xaf,
        0x97, 0xe3, 0x15, 0x2e, 0xe2, 0x7c, 0x11, 0xec, 0x13, 0x01, 0xd1, 0x71, 0x84, 0xba, 0x3b,
        0x0c, 0xcc,
    ],
    [
        0x32, 0x70, 0x9f, 0x06, 0xc2, 0xfa, 0xbc, 0xd4, 0x33, 0xef, 0x18, 0x40, 0x4d, 0xd5, 0x17,
        0xf5, 0x30, 0xcb, 0xcb, 0x75, 0xd0, 0x64, 0x1e, 0x6d, 0x47, 0x1d, 0xb3, 0x08, 0x70, 0x3b,
        0x4e, 0xb5,
    ],
    [
        0x3a, 0xb9, 0x98, 0xd0, 0x87, 0x2d, 0xf7, 0xa3, 0xee, 0xcc, 0xcb, 0x3a, 0x56, 0xb3, 0xe6,
        0xe2, 0xad, 0x3e, 0x07, 0x27, 0x0a, 0x4d, 0x84, 0xe1, 0xc3, 0x70, 0x36, 0x32, 0x3b, 0xeb,
        0x0c, 0x6a,
    ],
    [
        0x5c, 0xe2, 0xd4, 0xd3, 0xda, 0xeb, 0x09, 0xd4, 0xb2, 0xe6, 0x81, 0xac, 0xae, 0x02, 0x49,
        0x88, 0xfe, 0x0e, 0xbf, 0x41, 0x3a, 0x43, 0x19, 0x17, 0x65, 0xf6, 0x57, 0x0f, 0x72, 0x4c,
        0x52, 0x57,
    ],
    [
        0xa0, 0x5b, 0xcd, 0xa3, 0x27, 0x9a, 0xc7, 0x4d, 0xd8, 0xae, 0xdb, 0xe9, 0x05, 0x06, 0x66,
        0xa7, 0xc9, 0x97, 0xa4, 0x2c, 0xe2, 0x30, 0x7a, 0x24, 0x45, 0x7a, 0x50, 0x30, 0x10, 0xca,
        0x6d, 0x74,
    ],
    [
        0xc5, 0x37, 0x16, 0x5e, 0x4e, 0x75, 0x3b, 0xae, 0x30, 0xd0, 0x21, 0xc8, 0xf4, 0xa1, 0xd7,
        0x44, 0x5e, 0x42, 0xa3, 0x3d, 0xb1, 0xc2, 0x4f, 0x87, 0x3d, 0x49, 0x5f, 0x00, 0x7c, 0x5b,
        0xa8, 0x74,
    ],
    [
        0x5a, 0x17, 0xb1, 0xf6, 0x96, 0xef, 0x13, 0x18, 0x90, 0x19, 0x88, 0x7b, 0x39, 0x29, 0x75,
        0xa1, 0x76, 0xfb, 0x98, 0x4b, 0x7f, 0x76, 0x27, 0x93, 0x2e, 0x4e, 0x24, 0xce, 0x7c, 0xca,
        0x5c, 0x32,
    ],
    [
        0x05, 0xe7, 0x77, 0x6f, 0xcf, 0x25, 0xe3, 0xbb, 0xd0, 0x20, 0x1d, 0x38, 0x69, 0xb4, 0x54,
        0x76, 0xeb, 0x07, 0xed, 0x0c, 0x86, 0x8b, 0x95, 0x38, 0x70, 0xbd, 0x86, 0xd5, 0x53, 0x13,
        0xd4, 0x83,
    ],
    [
        0xe1, 0x31, 0xf5, 0x6a, 0xc4, 0x26, 0xe4, 0xf0, 0x12, 0x03, 0x5a, 0xfe, 0x10, 0x77, 0x79,
        0x42, 0x2b, 0x16, 0x98, 0x59, 0x8d, 0x66, 0x24, 0x91, 0xc2, 0xfc, 0x0b, 0xf1, 0x91, 0x79,
        0xb1, 0x4f,
    ],
    [
        0x97, 0xe5, 0x5a, 0x18, 0x37, 0x0d, 0x0f, 0x36, 0x81, 0x33, 0x23, 0x0a, 0xbc, 0x72, 0xc9,
        0xa4, 0xe0, 0xf8, 0x42, 0x8d, 0x23, 0xc7, 0x92, 0xde, 0xf0, 0xf8, 0xd3, 0xf4, 0xe8, 0x32,
        0xfb, 0x62,
    ],
    [
        0xb4, 0xf6, 0x25, 0x1c, 0x59, 0xc9, 0x1d, 0x0e, 0x91, 0x7a, 0x6f, 0x25, 0xf7, 0x4f, 0xbe,
        0x4b, 0xb2, 0x8f, 0xeb, 0x71, 0x58, 0x94, 0x02, 0x99, 0xbd, 0x18, 0xb3, 0xb0, 0x13, 0x9a,
        0xe4, 0x5e,
    ],
    [
        0xcd, 0x43, 0x28, 0xf6, 0x45, 0xcf, 0xf3, 0x9d, 0x60, 0x3f, 0x21, 0xd3, 0xf3, 0xe8, 0xc1,
        0x44, 0x14, 0xf6, 0xe3, 0xb0, 0xd0, 0x53, 0x61, 0xd6, 0xc2, 0x7f, 0x4f, 0x96, 0xbd, 0x34,
        0x28, 0x77,
    ],
    [
        0x58, 0xca, 0x25, 0xd9, 0x7f, 0x73, 0x58, 0x7c, 0x53, 0x53, 0xf5, 0x65, 0xf0, 0x31, 0x6b,
        0x7e, 0x00, 0x41, 0xd6, 0xe8, 0xa0, 0x50, 0x0b, 0xae, 0xc7, 0xeb, 0x2c, 0xe4, 0x73, 0xa4,
        0x3f, 0xa4,
    ],
    [
        0x47, 0xfd, 0x0a, 0xbd, 0x95, 0x2f, 0xcd, 0x98, 0xaf, 0x68, 0x79, 0x55, 0xb5, 0x83, 0xb1,
        0xf2, 0xb1, 0xed, 0xe9, 0xf1, 0x8a, 0x82, 0x1c, 0xec, 0xc4, 0xec, 0x90, 0x3b, 0x01, 0x79,
        0x37, 0x61,
    ],
    [
        0xd2, 0x20, 0x81, 0x78, 0xb4, 0x3b, 0x25, 0x86, 0x83, 0xd9, 0x89, 0x77, 0xa3, 0x4a, 0xc8,
        0xa5, 0x93, 0x02, 0x64, 0xd4, 0x92, 0xd4, 0x7c, 0x42, 0x5a, 0x44, 0x14, 0x45, 0xaa, 0x7a,
        0x0b, 0x84,
    ],
    [
        0xc2, 0xd2, 0x9b, 0x7b, 0x83, 0xa6, 0xcd, 0x29, 0xda, 0x18, 0x39, 0x39, 0x49, 0xb9, 0x8b,
        0x60, 0x12, 0x72, 0x2c, 0x3c, 0x42, 0x2f, 0xf5, 0x0e, 0x3c, 0x44, 0x35, 0x3c, 0x48, 0x3e,
        0x05, 0x7c,
    ],
    [
        0xcc, 0xaa, 0xf1, 0x85, 0x78, 0x96, 0x08, 0x92, 0x4a, 0xfa, 0x2f, 0xde, 0xc7, 0xac, 0xef,
        0x23, 0x7f, 0x3d, 0x7f, 0xb5, 0x6e, 0x79, 0xfe, 0x58, 0x23, 0x86, 0x44, 0x28, 0x83, 0x00,
        0x46, 0x15,
    ],
    [
        0x1f, 0x5b, 0xb4, 0xaf, 0x99, 0xb4, 0x59, 0x0a, 0xc3, 0xde, 0xfa, 0x8f, 0x85, 0xed, 0xbe,
        0x35, 0x39, 0x25, 0x1f, 0x13, 0x25, 0xdb, 0x58, 0x5c, 0x2b, 0xae, 0x8a, 0x85, 0xbb, 0xc6,
        0x6e, 0xa8,
    ],
]);

pub const MESSAGE: &[u8] = b"test";

pub const ADDRESS: &str = "HntXzvMpaZQSEVYajMWWtbSJG5rSpZiaBBGsgZBFbhnv";

pub const ADDRESS_BYTES: [u8; 32] = [
    0xf9, 0x7c, 0x65, 0xbd, 0xe0, 0x83, 0x0a, 0x84, 0x79, 0xaa, 0xe2, 0x22, 0x67, 0x94, 0xcf, 0xf3,
    0x3a, 0xaf, 0xa7, 0xc7, 0x6e, 0xe2, 0x89, 0x4d, 0x52, 0x7d, 0xc3, 0x28, 0x62, 0xde, 0x61, 0xf7,
];

#[test]
fn test_keygen() {
    let pubkey = PRIVKEY.pubkey::<WinternitzKeccak>();
    assert_eq!(pubkey, PUBKEY);
    assert_eq!(
        &pubkey.address::<WinternitzKeccak>().to_array_string(),
        ADDRESS
    );

    let signature = PRIVKEY.sign::<WinternitzKeccak>(MESSAGE);
    let pubkey_2 = signature.recover_pubkey::<WinternitzKeccak>(MESSAGE);
    assert_eq!(pubkey, pubkey_2)
}

#[test]
fn test_split_signature() {
    let signature = PRIVKEY.sign::<WinternitzKeccak>(MESSAGE);
    let (pairing_hash, commitment, execute) = signature.split::<WinternitzKeccak>(MESSAGE);
    let address_recovered = commitment.recover_address::<WinternitzKeccak>(&WinternitzKeccak::hash(&MESSAGE), &pairing_hash);
    assert_eq!(ADDRESS, address_recovered.to_array_string().as_str());
    let pairing_hash_recovered = execute.recover_pairing_hash::<WinternitzKeccak>(MESSAGE);
    assert_eq!(pairing_hash, pairing_hash_recovered);
}

#[test]
fn test_address_encoding() {
    let address = WinternitzAddress::try_from(ADDRESS).unwrap();
    assert_eq!(address.0, ADDRESS_BYTES);
    let address_2 = WinternitzAddress::from(ADDRESS_BYTES);
    let str_2 = address_2.to_array_string();
    assert_eq!(str_2.as_str(), ADDRESS)
}

#[test]
fn test_bip32_derivation() {
    let seed = [0x67, 0x51, 0xbc, 0x35, 0x6a, 0x47, 0x05, 0x51, 0xe4, 0x9f, 0x2d, 0x2e, 0x81, 0xa3, 0x4b, 0x12, 0x76, 0x43, 0xb0, 0xec, 0x6f, 0x3a, 0xba, 0x4b, 0x63, 0x7a, 0xb6, 0x3d, 0x31, 0x64, 0x40, 0x37, 0x79, 0x0f, 0x15, 0xbf, 0x50, 0x21, 0x90, 0x7a, 0x7e, 0x81, 0xca, 0xc7, 0xd8, 0x06, 0xdb, 0x18, 0xde, 0x0c, 0x25, 0xb0, 0x90, 0xf2, 0xbb, 0xac, 0x79, 0x9b, 0x88, 0x15, 0xfc, 0x03, 0x53, 0xc2];
    let path = "m/30583'/0'/0'";
    let privkey = WinternitzPrivkey::from_seed(seed, path).unwrap();
    assert_eq!(privkey.0[0], [0x6f, 0xce, 0x6e, 0xda, 0x05, 0xe3, 0x05, 0xf9, 0x0e, 0x35, 0xfe, 0x20, 0x69, 0x77, 0xd3, 0xfd, 0x00, 0x20, 0xe7, 0xd8, 0x57, 0xd8, 0x67, 0x0b, 0xdd, 0x9a, 0xbf, 0x06, 0xa3, 0x47, 0x03, 0x0e]);
    assert_eq!(privkey.0[31], [0xc3, 0x28, 0x84, 0x40, 0xc3, 0x97, 0x5e, 0x9b, 0xcc, 0x1f, 0x25, 0x3b, 0x65, 0x7e, 0x5d, 0x27, 0x5c, 0xfa, 0xdb, 0xf0, 0x34, 0x6e, 0x4e, 0xe9, 0x9e, 0xe7, 0xc1, 0x83, 0x0f, 0x4f, 0xef, 0x51]);
}
